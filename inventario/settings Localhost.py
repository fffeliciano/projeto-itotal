"""
Django settings for inventario project.

Generated by 'django-admin startproject' using Django 3.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

# criar um arquivo .env dentro do projeto, e salvar as variáveis de ambiente
# ITT_API_KEY='Token 29adb932a099ec021f34d767997154a18594974d' # criado no Django - user - token
# BLING_API_KEY='300dd1e90fe4cc109f665af2f30d20d6bdcf9440af7c6d200880823a2bf2f141c5feb3b4'  # criado no bling
# DB_PASS='b`TEf0a}bz;imMLj~nxht4JibSwHv8G<'  # Senha gerada no banco de dados da Amazon ou mysql senha

import os, sys
from dotenv import load_dotenv



load_dotenv()

def env_var(name):
    try:
        return str(os.environ[name])
    except:
        raise KeyError


from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# *** BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

#! Server ------------------------------------------ 
SECRET_KEY = '_usx$hg(a+@pkv2+36lkha324lps!#aoaut=_%ar_=!#r6@0n8'
#SECRET_KEY = env_var('SECRET_KEY')
#! Server ------------------------------------------ 


####
#### A T EN N Ç Ã O  E X C L U I R  E S T A  P A R T E
####



# SECURITY WARNING: don't run with debug turned on in production!
## DEBUG = True
DEBUG = True

#! Server ------------------------------------------ 
#ALLOWED_HOSTS = ['mbp.f3system.com.br', '10.168.254.1']
ALLOWED_HOSTS = ['*']
#! Server ------------------------------------------ 

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'widget_tweaks',
    'produtos',
    'separacao',
    'inventario',
    'pedidos',
    'estoque',
    #'embarque',
    'uploadnf',
    'fornecedor',
    'crispy_forms',
]

CRISPY_TEMPLATE_PACK = 'bootstrap4'

#DATE_INPUT_FORMATS = ['%d-%m-%Y', '%Y-%m-%d']



REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
        'PAGE_SIZE': 100
}




MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'inventario.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        #'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]




SETTINGS_PATH = os.path.dirname(os.path.dirname(__file__))


#TEMPLATE_DIRS = ('D:/tests/django/workspace/django_project/django_project/templates',)
#TEMPLATE_DIRS = (r'C:\\ProgramData\\Anaconda3\\envs\\total\\uploadnf\\templates',)

TEMPLATE_DIRS = (
    os.path.join(SETTINGS_PATH, 'templates'),
)


WSGI_APPLICATION = 'inventario.wsgi.application'

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases
'''
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
'''
#! Server ------------------------------------------ 
"""
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'itotal',
        'USER': 'dbmasteruser',
        'PASSWORD':env_var('DB_PASS'),
        'HOST': env_var('ENDPOINT'), 
        'PORT':'3306',
        'OPTIONS':{
            'init_command':"SET sql_mode='STRICT_TRANS_TABLES'",
        }
    }
}
"""
#! Server ------------------------------------------ 

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'itotal',
        'USER': 'root',
        #'PASSWORD':env_var('DB_PASS'),
        'PASSWORD': 'vertrigo',
        'HOST':'localhost',
        'PORT':'3306',
        'OPTIONS':{
            'init_command':"SET sql_mode='STRICT_TRANS_TABLES'",
        }
    }
}

# Notebook substituir pela linha abaixo na array acima - Configuração do notebook
#'USER': 'root',
#'PORT': ''

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


#------------------------------------
#USE_L10N = True
#USE_L10N = False

#    DATA_FORMAT = [
#        '%d-%m-%Y', '%d/%m/%Y',              # '25-10-2006', '26/10/2006', '10/25/06'
#        '%d %b %Y', '%d %b, %Y'            # '25 Oct 2006', '25 Oct, 2006'
#    ]


#------------------------------------
#DATE_FORMAT = '%d-%m-%y'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

# Notebook desativar linha abaixo
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

STATIC_URL = '/static/'

# Notebook Ativar linha abaixo
#STATICFILES_DIRS = [
#    os.path.join(BASE_DIR, 'static'),
#]

CRISPY_TEMPLATE_PACK = 'bootstrap4'



LOGIN_REDIRECT_URL = 'home'
LOGOUT_REDIRECT_URL = '/accounts/login'

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

MEDIA_ROOT = os.path.join(BASE_DIR, 'xml')

MEDIA_URL = '/xml/'

#! Server ------------------------------------------ 
# Configuração do Servidor nginx
#SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
#SECURE_SSL_REDIRECT = True
#SESSION_COOKIE_SECURE = True
#CSRF_COOKIE_SECURE = True
#! Server ------------------------------------------ 